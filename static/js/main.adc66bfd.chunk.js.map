{"version":3,"sources":["logo.svg","components/js/Header.js","components/js/Name.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","href","class","target","React","Component","Name","name","id","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,8KCkC5BC,G,6KA1BP,OACI,gCACI,6BACI,6BACI,uBAAGC,KAAK,aAAaC,MAAM,WAA3B,QACA,uBAAGD,KAAK,OAAOC,MAAM,WAArB,WACA,uBAAGD,KAAK,UAAUC,MAAM,WAAxB,kBACA,uBAAGD,KAAK,OAAOC,MAAM,WAArB,YAEA,uBAAGD,KAAK,uCAAuCE,OAAO,UAClD,uBAAGD,MAAM,sBAEb,uBAAGD,KAAK,gCAAgCE,OAAO,UAC3C,uBAAGD,MAAM,mBAGb,uBAAGD,KAAK,gDAAgDE,OAAO,UAC3D,uBAAGD,MAAM,4B,GAnBhBE,IAAMC,YCcZC,G,6KAZP,OACI,6BACI,uBAAGC,KAAK,QACR,6BAASC,GAAG,aACR,uBAAGA,GAAG,UAAN,oBACA,uBAAGA,GAAG,cAAN,qD,GAPDJ,IAAMC,YC2BVI,MA3Bf,WACE,OACE,yBAAKC,UAAU,OACT,4BAAQA,UAAU,cACd,kBAAC,EAAD,OAGJ,kBAAC,EAAD,QCDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.adc66bfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nimport React from 'react';\r\n\r\nimport '../css/Header.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div>\r\n                    <nav>\r\n                        <a href=\"index.html\" class=\"navlink\">Home</a>\r\n                        <a href=\"#dev\" class=\"navlink\">Web Dev</a>\r\n                        <a href=\"#design\" class=\"navlink\">Graphic Design</a>\r\n                        <a href=\"#art\" class=\"navlink\">Fine Art</a>\r\n\r\n                        <a href=\"https://www.instagram.com/mmartnick/\" target=\"_blank\">\r\n                            <i class=\"fab fa-instagram\"></i>\r\n                        </a>\r\n                        <a href=\"https://github.com/Martnick1/\" target=\"_blank\">\r\n                            <i class=\"fab fa-github\"></i>\r\n                        </a>\r\n\r\n                        <a href=\"https://www.linkedin.com/in/matthew-martnick/\" target=\"_blank\">\r\n                            <i class=\"fab fa-linkedin\"></i>\r\n                        </a>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","\r\nimport React from 'react';\r\n\r\nimport '../css/Name.css';\r\n\r\n\r\nclass Name extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a name=\"top\"></a>\r\n                <section id=\"maintitle\">\r\n                    <p id=\"studio\">MATTHEW MARTNICK</p>\r\n                    <p id=\"occupation\">WEB DEVELOPMENT / GRAPHIC DESIGN / FINE ART</p>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Name;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './components/js/Header';\r\nimport Name from './components/js/Name';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n          <header className=\"App-header\">\r\n              <Header></Header>\r\n          </header>\r\n\r\n          <Name></Name>\r\n\r\n          {/*      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n              Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n          <a\r\n              className=\"App-link\"\r\n              href=\"https://reactjs.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n          >\r\n            \r\n        </a>*/}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}